os: linux
dist: focal
language: cpp

# Blacklist
branches:
  except:
    - gh-pages

jobs:
  include:
    - os: linux
      addons:
        apt:
          packages: ["libboost-dev", "cmake", "clang-10"]
      env: TOOLSET=clang++-10 TOOLSET_C=clang-10 BUILD_TYPE='Release'

    - os: linux
      addons:
        apt:
          packages: ["libboost-dev", "cmake"]
      env: TOOLSET=g++ TOOLSET_C=gcc BUILD_TYPE='Debug'

    - os: linux
      addons:
        apt:
          packages: ["libboost-dev", "cmake"]
      env: TOOLSET=g++ TOOLSET_C=gcc BUILD_TYPE='Release'

    - os: linux
      addons:
        apt:
          packages: ["libboost-dev", "cmake", "lcov", "doxygen"]
      env: TOOLSET=g++ TOOLSET_C=gcc BUILD_TYPE='Debug' options='-Dyenxo_COVERAGE=ON -Dyenxo_BUILD_DOC=ON'
      after_success:
        - bash <(curl -s https://codecov.io/bash) -X fix
        - if [ "${TRAVIS_BRANCH}" == "master" ]; then ../scripts/deploy_doc.sh; fi

install:
  - cd ../
  - export CXX=$TOOLSET
  - export CC=$TOOLSET_C
  - $CXX --version
  - $CC --version
  - cmake --version

  # RapidJSON
  - git clone --recurse-submodules https://github.com/Tencent/rapidjson.git
  - cd rapidjson
  - mkdir build/ && cd build/
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DRAPIDJSON_BUILD_TESTS=OFF -DRAPIDJSON_BUILD_EXAMPLES=OFF -DRAPIDJSON_BUILD_DOC=OFF ..
  - cmake --build .
  - sudo cmake --build . --target install
  - cd ../../

  # Catch2
  - git clone --recurse-submodules https://github.com/catchorg/Catch2.git
  - cd Catch2
  - git checkout v2.13.2
  - mkdir build/ && cd build/
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCATCH_BUILD_TESTING=OFF -DCATCH_INSTALL_DOCS=OFF ..
  - cmake --build .
  - sudo cmake --build . --target install
  - cd ../../

  # debug_assert
  - git clone --recurse-submodules https://github.com/foonathan/debug_assert.git
  - cd debug_assert
  - mkdir build/ && cd build/
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - cmake --build .
  - sudo cmake --build . --target install
  - cd ../../

  # type_safe
  - git clone --recurse-submodules https://github.com/foonathan/type_safe.git
  - cd type_safe
  - mkdir build/ && cd build/
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - cmake --build .
  - sudo cmake --build . --target install
  - cd ../../

  - cd yenxo

script:
  - mkdir build/ && cd build/
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE $options ..
  - cmake --build .
  - ./test_yenxo
